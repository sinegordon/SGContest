[
    {
        "problem": 90,
        "type": "equal",
        "task": "Введите строку, состоящую только из цифр, и определите количество четных цифр в строке без использования строковых функций. \nНапример, программа принимает на вход строку 1113351 и возвращает 0.",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "12234457909",
                    "out": "5",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "0123456789",
                    "out": "5",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 91,
        "type": "equal",
        "task": "Преобразуйте строку из русских букв в верхний регистр, не используя строковые функции, выведите результат. Например, программа принимает на вход строку 'абвгде' (без кавычек) и возвращает 'АБВГДЕ' (без кавычек).",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "абвгде",
                    "out": "АБВГДЕ",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "АбВгДе",
                    "out": "АБВГДЕ",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "БУКВА",
                    "out": "БУКВА",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "буква",
                    "out": "БУКВА",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 92,
        "type": "equal",
        "task": "Введите строку, состоящую только из цифр, и определите сумму нечетных цифр в строке без использования строковых функций. Например, программа принимает на вход строку 1113351 и возвращает 7.",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "1113351",
                    "out": "7",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "1223445799",
                    "out": "6",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "468246",
                    "out": "0",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 93,
        "type": "equal",
        "task": "Введите строку и определите количество больших букв латинского алфавита в строке без использования строковых функций. Например, программа принимает на вход строку sdfsacFdaS и возвращает 2.",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "sdfsacFdaS",
                    "out": "2",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "adfdfafs",
                    "out": "0",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "DLNND",
                    "out": "5",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 94,
        "type": "equal",
        "task": "Введите строку и определите количество знаков препинания в строке без использования строковых функций. Например, программа принимает на вход строку 'Как же хорошо летом на море' (без кавычек) и возвращает 0",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "Это ёж — его голыми руками не возьмёшь!",
                    "out": "2",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "12,3",
                    "out": "1",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "Как же хорошо летом на море",
                    "out": "0",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "Так было и в этом году: осень стояла холодная, голая земля промерзла и была твердая, как камень.",
                    "out": "4",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 95,
        "type": "equal",
        "task": "Введите произвольную строку и сформируйте из нее строку, удалив все 'лишние' пробелы (оставив по 1), не используя строковые функции, выведите результат. Пример входных данных - строка 'Привет     меня зовут   Андреев   Артём' (без кавычек). На выходе ожидается - 'Привет меня зовут Андреев Артём' (без кавычек).",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "Привет  меня    зовут         Артём",
                    "out": "Привет меня зовут Артём",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "Привет     меня зовут   Андреев   Артём",
                    "out": "Привет меня зовут Андреев Артём",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "Привет меня зовут Артём",
                    "out": "Привет меня зовут Артём",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 96,
        "type": "equal",
        "task": "Введите строку из цифр и сформируйте из нее строку, оставив только уникальные цифры, не используя строковые функции, выведите результат. Например, программа принимает на вход строку 11223344 и возвращает 1234.",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "1234",
                    "out": "1234",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "11223344",
                    "out": "1234",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "67544221",
                    "out": "675421",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 97,
        "type": "equal",
        "task": "Инвертируйте строку, не используя строковые функции, выведите результат. Например, программа принимает на вход строку 'TURBO'(без кавычек), на выходе ожидается 'OBRUT' (без кавычек).",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "Это ёж — его голыми руками не возьмёшь!",
                    "out": "!ьшёмьзов ен имакур имылог оге - жё отЭ",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "12345",
                    "out": "54321",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "TURBO",
                    "out": "OBRUT",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 98,
        "type": "equal",
        "task": "Преобразуйте строку из латинских букв в верхний регистр, не используя строковые функции, выведите результат. Пример - на вход подается строка 'hello world' (без кавычек), на выходе ожидается строка 'HELLO WORLD' (без кавычек).",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "9267435077",
                    "out": "9267435077",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "hello world",
                    "out": "HELLO WORLD",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "zexgslmiam ZEXGSLMIAM zexgslmiam",
                    "out": "ZEXGSLMIAM ZEXGSLMIAM ZEXGSLMIAM",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "ZEXGSLMIAM ZEXGSLMIAM ZEXGSLMIAM",
                    "out": "ZEXGSLMIAM ZEXGSLMIAM ZEXGSLMIAM",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 99,
        "type": "equal",
        "task": "Преобразуйте строку из латинских букв в нижний регистр, не используя строковые функции, выведите результат  Например, программа принимает на вход строку 'ASDF' (без кавычек) и возвращает 'asdf' (без кавычек).",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "ASDF",
                    "out": "asdf",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "PRIVET PRIVET",
                    "out": "privet privet",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "privet PRIVET",
                    "out": "privet privet",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 100,
        "type": "equal",
        "task": "Напишите функцию sort_dict, которая принимает словарь и возвращает его копию, в которой ключи словаря отсортированы по убыванию. Например при вводе:\n{a: 1, c: 5, b: 6}\nОжидается вывод:\n{c: 5, b: 6, a: 1}",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "{a: 1, c: 5, b: 6}",
                    "out": "{c: 5, b: 6, a: 1}",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "{a: 55, sd: 222, b: 4}",
                    "out": "{sd: 222, b: 4, a: 55}",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 101,
        "type": "equal",
        "task": "Введите с клавиатуры 2 строки. Замените первые 5 вхождений одной введенной строки во вторую на них же в верхнем регистре, используя встроенные функции. Например введены строки:\nпа\nрапапапапапа папапапа\nВывод:\nраПАПАПАПАПА папапапа",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "привет\nпривет привет привет привет привет",
                    "out": "ПРИВЕТ ПРИВЕТ ПРИВЕТ ПРИВЕТ ПРИВЕТ",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "па\nрапапапапапа папапапа",
                    "out": "раПАПАПАПАПА папапапа",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 102,
        "type": "equal",
        "task": "Проверьте, что указанный в строке номер телефона имеет формат +7 (000) 000-00-00, используя встроенные функции. По результатам проверки выведите True или False. Пример: для строки +7 (555) 220-11-00 возвращается True, для невалидной строки  +7 (555)2201100 возвращается False.",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "+70000000000",
                    "out": "False",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "+7 (555) 220-11-00",
                    "out": "True",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "+7 (o21) 412-55-11",
                    "out": "False",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "+7 (988) 333-08-060",
                    "out": "False",
                    "score": 10
                }
            },
            "5": {
                "1": {
                    "in": "+7 (988) 333-08-06 af",
                    "out": "False",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 103,
        "type": "equal",
        "task": "Подсчитайте все вхождения первой введенной строки во вторую. Например, для входа\n l\nHello, World!\n  вывод: 3",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "l\nHello, World!",
                    "out": "3",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "PRIVET PRIVET\nprivet privet",
                    "out": "0",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "privet\nPRIVET privet",
                    "out": "1",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 104,
        "type": "equal",
        "task": "Удалите все знаки препинания из введенной строки, используя встроенные функции. Например, программа принимает на вход строку 'Это ёж — его голыми руками не возьмёшь!' (без кавычек) и возвращает строку 'Это ёж его голыми руками не возьмёшь' (без кавычек).",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "Это ёж - его голыми руками не возьмёшь!",
                    "out": "Это ёж его голыми руками не возьмёшь",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "Как же хорошо летом на море",
                    "out": "Как же хорошо летом на море",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "Так было и в этом году: осень стояла холодная, голая земля промерзла и была твердая, как камень!",
                    "out": "Так было и в этом году осень стояла холодная голая земля промерзла и была твердая как камень",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 105,
        "type": "equal",
        "task": "Проверьте, является ли введенная строка корректным номером сотового телефона в формате +70000000000, используя встроенные функции. К примеру, введена строка +70000000000, вывод True, а если номер телефона не корректный - вывод False.",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "+70000000000",
                    "out": "True",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "+7000000000",
                    "out": "False",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "+7o214125511",
                    "out": "Talse",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "+798833308060",
                    "out": "False",
                    "score": 10
                }
            },
            "5": {
                "1": {
                    "in": "+79883330806af",
                    "out": "False",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 106,
        "type": "equal",
        "task": "Проверьте, является ли введенная строка корректным именем переменной в python, используя встроенные функции. К примеру, если введена строка numberrr, вывод True. Если имя переменной некорректно - вывод False.",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "numberrr",
                    "out": "True",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "+7000000000",
                    "out": "False",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "1mumber",
                    "out": "False",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "Numberrr",
                    "out": "True",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 107,
        "type": "equal",
        "task": "Выровняйте введенную строку по правому краю до введенной после строки длины, заполнив пространство символами '*', выведите строку, используйте встроенные функции.\nНапример для ввода\nстрока\n8\nвывод\n**строка",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "Простая строка\n15",
                    "out": "*Простая строка",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "Простая строка\n17",
                    "out": "***Простая строка",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "простая строка\n19",
                    "out": "*****простая строка",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 108,
        "type": "equal",
        "task": "Выровняйте введенную строку по левому краю до введенной после строки длины,заполнив пространство символами '*', выведите строку, используйте встроенные функции. Например для входных данных:\nпривет\n10\nожидается вывод:\nпривет****",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "привет\n10",
                    "out": "привет****",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "пока\n5",
                    "out": "пока*",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 109,
        "type": "equal",
        "task": "Выровняйте введенную строку по ширине до введенной после строки ширины пробелами справа, выведите строку в кавычках. Например для входных данных:\na\n3\nвывод:  \"a  \"\n, а для \na  b\n4\nвывод: \"a  b\"\n",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "a\n3",
                    "out": "\"a  \"",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "ab\n3",
                    "out": "\"ab \"",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "abc\n3",
                    "out": "\"abc\"",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "ab c\n6",
                    "out": "\"ab c  \"",
                    "score": 10
                }
            },
            "5": {
                "1": {
                    "in": "ab c\n7",
                    "out": "\"ab c   \"",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 110,
        "type": "equal",
        "task": "Преобразуйте введенную строку так, чтобы каждое слово начиналось с большой буквы, используя встроенную функцию, выведите результат. Например, принимает на входе строку 'простая строка' (без кавычек) и ожидает на выходе строку 'Простая Строка' (без кавычек).",
        "rating": 1,
        "variants": {
            "1": {
                "1": {
                    "in": "простая строка",
                    "out": "Простая Строка",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "Простая строка",
                    "out": "Простая Строка",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "простая Строка",
                    "out": "Простая Строка",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "Как же хорошо Летом на море",
                    "out": "Как Же Хорошо Летом На Море",
                    "score": 10
                }
            },
            "5": {
                "1": {
                    "in": "Постая Строка",
                    "out": "Постая Строка",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 111,
        "type": "equal",
        "task": "Составьте список из элементов с нечетными индексами первой половины и четными второй исходного списка, используя срезы. К примеру, при вводе [1, 2, 3, 4, 5, 6] ожидается вывод \n[1, 3, 5, 2, 4, 6]",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[1, 2, 3, 4, 5, 6]",
                    "out": "[1, 3, 5, 2, 4, 6]",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[1, 2, 3, 4, 5]",
                    "out": "[1, 3, 5, 2, 4]",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "[1]",
                    "out": "[1]",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 112,
        "type": "equal",
        "task": "Инвертируйте строку, используя срезы, например, строка \"abc\" преобразуется в \"cba\"",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "Это ёж — его голыми руками не возьмёшь!",
                    "out": "!ьшёмьзов ен имакур имылог оге - жё отЭ",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "12345",
                    "out": "54321",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "TURBO",
                    "out": "OBRUT",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 113,
        "type": "equal",
        "task": "Инверсируйте строку, за исключением первого символа, используя срезы. Например для входной строки 'TURBO' ожидается вывод 'ТOBRU'.",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "Это ёж — его голыми руками не возьмёшь!",
                    "out": "Э!ьшёмьзов ен имакур имылог оге — жё от",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "12345",
                    "out": "15432",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "TURBO",
                    "out": "TOBRU",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "ooooo",
                    "out": "ooooo",
                    "score": 10
                }
            },
            "5": {
                "1": {
                    "in": "a555a",
                    "out": "a555a",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 114,
        "type": "equal",
        "task": "Выведите средние 6 символов (из середины строки), используя срезы и функции. Например ввод: 1122222211, вывод: 222222",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "1122222211",
                    "out": "222222",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "123456",
                    "out": "123456",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 115,
        "type": "equal",
        "task": "Выведите по 3 первых символа каждого слова в строке. Например, при вводе строки 'Простая строка' (без кавычек) на выходе ожидается строка 'Простр' (без кавычек). Если в слове меньше 3 символов, оно пропускается.",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "Как же хорошо Летом на море",
                    "out": "КакхорЛетмор",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "ту т не т тр ех бу кв",
                    "out": "",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "Простая строка",
                    "out": "Простр",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 116,
        "type": "equal",
        "task": "Введите список и выведите его с шагом 3 с конца, используя срез. К примеру, при вводе [1, 2, 3, 4, 5, 6] ожидается вывод [6, 3]",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[1, 2, 3, 4, 5, 6]",
                    "out": "[6, 3]",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[1, 2, 3, 4, 5]",
                    "out": "[5, 2]",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 117,
        "type": "equal",
        "task": "Выведите список, в котором первая половина перенесена во вторую, используя срез. К примеру, при вводе [1, 2, 3, 4, 5, 6] ожидается вывод [4, 5, 6, 1, 2, 3]",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[1, 2, 3, 4, 5, 6]",
                    "out": "[4, 5, 6, 1, 2, 3]",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[1, 2, 3, 4, 5]",
                    "out": "[4, 5, 3, 1, 2]",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "[1]",
                    "out": "[1]",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 118,
        "type": "equal",
        "task": "Составьте список, в котором элементы с четными индексами поменены на элементы с нечетными, используя срез. Например, программа при вводе списка [1, 2, 3, 4] выдает [2, 1, 4, 3]",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[1, 2, 3, 4]",
                    "out": "[2, 1, 4, 3]",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 119,
        "type": "equal",
        "task": "Составьте список из первых 5 и последних 3 элементов заданного списка.\nНапример для списка [16, 19, 13, 18, 15, 16, 19, 13, 18, 15, 16, 19, 13, 18, 15, 16, 19, 13, 18, 15] ожидается [16, 19, 13, 18, 15, 13, 18, 15]",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[16, 19, 13, 18, 15, 16, 19, 13, 18, 15, 16, 19, 13, 18, 15, 16, 19, 13, 18, 15]",
                    "out": "[16, 19, 13, 18, 15, 13, 18, 15]",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[16, 19, 13, 18, 15, 0, 13, 18, 15]",
                    "out": "[16, 19, 13, 18, 15, 13, 18, 15]",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "[16, 16, 16, 16, 16, 16, 16, 16]",
                    "out": "[16, 16, 16, 16, 16, 16, 16, 16]",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 120,
        "type": "equal",
        "task": "Введите числа в строке через пробел, выведите наибольшее, не используя функцию. Например, программа при вводе строки '1 2 3 4 5 6 7 8 9' (без кавычек) ожидает на выходе строку '9' (без кавычек).",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "1 2 3 4 5 6 7 8 9",
                    "out": "9",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "2 45 35 6 82 46",
                    "out": "82",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "-1 2 5 0 7 20",
                    "out": "20",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "1 1 1 1 1 1",
                    "out": "1",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 121,
        "type": "equal",
        "task": "Введите числа в строке через пробел, выведите наименьшее введенное, не используя функцию min(). Например, программа при вводе строки '1 2 3 4 5 6 7 8 9' (без кавычек) ожидает на выходе строку '1' (без кавычек).",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "1 2 3 4 5 6 7 8 9",
                    "out": "1",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "2 45 35 6 82 46",
                    "out": "2",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "-1 2 5 0 7 20",
                    "out": "-1",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "1 1 1 1 1 1",
                    "out": "1",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 122,
        "type": "equal",
        "task": "Введите числа в строке через пробел, выведите список чисел без наибольшего. Пример: при вводе 1 2 3 4 5 6 7 8 9 ожидается [1, 2, 3, 4, 5, 6, 7, 8]",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "1 2 3 4 5 6 7 8 9",
                    "out": "[1, 2, 3, 4, 5, 6, 7, 8]",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "2 45 35 6 82 46",
                    "out": "[2, 45, 35, 6, 46]",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "-1 2 5 0 7 20",
                    "out": "[-1, 2, 5, 0, 7]",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "1 1 1 1 1 1",
                    "out": "[]",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 123,
        "type": "equal",
        "task": "Введите числа в строке через пробел, выведите список чисел без наименьшего. Пример: при вводе 1 2 3 4 5 6 7 8 9 ожидается [2, 3, 4, 5, 6, 7, 8, 9]",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "1 2 3 4 5 6 7 8 9",
                    "out": "[2, 3, 4, 5, 6, 7, 8, 9]",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "2 45 35 6 82 46",
                    "out": "[45, 35, 6, 82, 46]",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "-1 2 5 0 7 20",
                    "out": "[2, 5, 0, 7, 20]",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "1 1 1 1 1 1",
                    "out": "[]",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 124,
        "type": "equal",
        "task": "Введите слова в строке через пробел, выведите наибольшее и наименьшее по длине из введенных слов, не используя функции max() и min(). Пример: при вводе hello, his name is VorLeonid ожидается: VorLeonid is.",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "hello, his name is VorLeonid",
                    "out": "VorLeonid is",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "hi hellooooooo",
                    "out": "hellooooooo hi",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 125,
        "type": "equal",
        "task": "Введите слова в строке через пробел, выведите наибольшее и наименьшее по длине из введенных слов , не используя функции max() и min(). Пример: при вводе hello, his name is VorLeonid ожидается: VorLeonid is.",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "hello, his name is VorLeonid",
                    "out": "VorLeonid is",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "hi hellooooooo",
                    "out": "hellooooooo hi",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 126,
        "type": "equal",
        "task": "Введите слова в строке через пробел, выведите наибольшее и наименьшее по длине из введенных слов в лексикографическом порядке, не используя функции max() и min(). Например, при вводе 'как же хорошо летом' (без кавычек) программа ожидает на выходе строку 'же хорошо' (без кавычек)",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "как же хорошо летом",
                    "out": "же хорошо",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "как как как как",
                    "out": "как как",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "как же хорошо хорошо летом",
                    "out": "же хорошо",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 127,
        "type": "equal",
        "task": "Введите квадратную матрицу указанного предварительно размера из консоли в список и найдите максимальный элемент на главной диагонали. Например, при вводе :\n2\n1 2\n3 4\nна выходе ожидается: 4",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "2\n1 2\n3 4",
                    "out": "4",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "3\n1 2 3\n4 9 6\n7 8 5",
                    "out": "9",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1",
                    "out": "1",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 128,
        "type": "equal",
        "task": "Введите 2 квадратные матрицы указанного предварительно размера из консоли в список и найдите их сумму, выведите результирующую матрицу. Формат входных данных - первая строка размер матрицы, дальше идут построчно две матрицы. Например, вход:\n4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\nВыход:\n2 4 6 8\n2 4 6 8\n2 4 6 8\n2 4 6 8",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4",
                    "out": "2 4 6 8\n2 4 6 8\n2 4 6 8\n2 4 6 8",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 129,
        "type": "equal",
        "task": "",
        "rating": 1,
        "variants": {}
    },
    {
        "problem": 130,
        "type": "equal",
        "task": "Введите в консоли список чисел в одной строке и выведите уникальные числа через пробел в порядке возрастания. Например при вводе [1, 1, 1, 3, 3, 5, 1] ожидается вывод 1 3 5",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[1, 1, 1, 3, 3, 5, 1]",
                    "out": "1 3 5",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[1, 2, 2, 3, 4, 4, 5, 7, 9, 9]",
                    "out": "1 2 3 4 5 7 9",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 131,
        "type": "equal",
        "task": "Введите четыре списка чисел из четырех строк. Вывод должен состоять из 2 списков, в одном только числа первого и третьего списка, а в следующем только числа второго и четвертого списка. Например, для ввода:\n[1, 2, 3]\n[3, 4, 5]\n[6, 7, 8]\n[9, 10, 11]\nожидается вывод:\n[1, 2, 3, 6, 7, 8]\n[3, 4, 5, 9, 10, 11]",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[1, 2, 3]\n[3, 4, 5]\n[6, 7, 8]\n[9, 10, 11]",
                    "out": "[1, 2, 3, 6, 7, 8]\n[3, 4, 5, 9, 10, 11]",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 132,
        "type": "equal",
        "task": "Введите два списка слов в кавычках на двух строках и выведите через пробел слова в кавычках, имеющиеся в обоих списках. Например при вводе:\n[\"he\",\"she\",\"it\"]\n[\"he\",\"his\",\"her\",\"she\"]  \nожидается вывод: \"he\" \"she\".",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[\"he\",\"she\",\"it\"]\n[\"he\",\"his\",\"her\",\"she\"]  ",
                    "out": "\"he\" \"she\"",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[\"he\",\"she\",\"it\"]\n[\"his\",\"her\"]  ",
                    "out": "",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "[\"he\",\"she\",\"it\"]\n[\"he\",\"his\",\"her\"]  ",
                    "out": "\"he\"",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 133,
        "type": "equal",
        "task": "Введите два списка слов в кавычках на двух строках и выведите слова, имеющиеся в обоих списках.\nНапример, при входе: \n[\"hi\", \"how\", \"are\", \"you\"]\n[\"how\", \"are\", \"you\"]\nна выходе ожидается:\nhow are you",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[\"hi\", \"how\", \"are\", \"you\"]\n[\"how\", \"are\", \"you\"]",
                    "out": "how are you",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[\"are\", \"you\", \"are]\n[\"hi\", \"how\", \"are\", \"you\"]",
                    "out": "are you",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "[\"hi\", \"how\", \"are\", \"you\"]\n[\"I\", \"am\", \"fine\"]",
                    "out": "",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 134,
        "type": "equal",
        "task": "Введите два списка слов в кавычках на двух строках и выведите слова в кавычках через пробел, имеющиеся только во втором списке.  Например при вводе:\n[\"hi\", \"how\", \"are\", \"you\"]\n[\"how\", \"are\", \"you\"]\nожидается вывод:\n[\"how\", \"are\", \"you\"]",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[\"hi\", \"how\", \"are\", \"you\"]\n[\"how\", \"are\", \"you\"]",
                    "out": "\"how\" \"are\" \"you\"",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[\"are\", \"you\", \"are]\n[\"hi\", \"how\", \"are\", \"you\"]",
                    "out": "\"you\" \"are\"",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 135,
        "type": "equal",
        "task": "Введите два списка слов в кавычках на двух строках и выведите слова через пробел, имеющиеся только во втором списке.  Например при вводе:\n[\"hi\", \"how\", \"are\", \"you\"]\n[\"how\", \"are\", \"you\"]\nожидается вывод:\nhow are you",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[\"hi\", \"how\", \"are\", \"you\"]\n[\"how\", \"are\", \"you\"]",
                    "out": "how are you",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[\"are\", \"you\", \"are]\n[\"hi\", \"how\", \"are\", \"you\"]",
                    "out": "you are",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 136,
        "type": "equal",
        "task": "Введите два списка слов из двух строк и выведите слова, имеющиеся только в первом и только во втором списке, используя операции со множествами. /nНапример, при вводе:\n[\"hi\", \"how\", \"are\", \"you\"]\n[\"hi\", \"I\", \"am\", \"fine\"]\nна выходе ожидается:\nhow are you\nI am fine. Если таких слов нет, нужно вывести \"нет удовлетворяющих условию\"",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[\"hi\", \"how\", \"are\", \"you\"]\n[\"hi\", \"I\", \"am\", \"fine\"]",
                    "out": "how are you\nI am fine",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[\"hi\", \"how\", \"are\", \"you\"]\n[\"how\", \"are\", \"you\"]",
                    "out": "hi",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "[\"hi\", \"how\", \"are\", \"you\"]\n[\"how\", \"are\", \"you\", \"fine\"]",
                    "out": "hi\nfine",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "[\"hi\", \"how\", \"are\", \"you\"]\n[\"hi\", \"how\", \"are\", \"you\"]",
                    "out": "нет удовлетворяющих условию",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 137,
        "type": "equal",
        "task": "Введите три списка чисел из трех строк и выведите список только уникальных чисел. Например, при вводе:\n[1,1,1,3,3,5,1]\n[1,1,1,3,3,5,1]\n[1,1,1,3,3,5,1]\nожидается вывод:\n[1,3,5]",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[1,1,1,3,3,5,1]\n[1,1,1,3,3,5,1]\n[1,1,1,3,3,5,1]",
                    "out": "[1,3,5]",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[1,2,2,3,4,4,5,7,9,9]\n[1,1,1,3,3,5,1]\n[2]",
                    "out": "[1,2,3,4,5,7,9,2]",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 138,
        "type": "equal",
        "task": "Введите три списка чисел из трех строк и выведите только числа, имеющиеся во всех трех списках.\nНапример при вводе:\n[1,1,1,3,3,5,1]\n[1,1,4,3,3,5,1]\n[1,1,1,3,8,5,1]\nожидается вывод:\n[1,3,5]",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[1,1,1,3,3,5,1]\n[1,1,4,3,3,5,1]\n[1,1,1,3,8,5,1]",
                    "out": "[1,3,5]",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[1,2,2,3,4,4,5,7,9,9]\n[1,1,1,3,3,5,1]\n[3]",
                    "out": "[3]",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 139,
        "type": "equal",
        "task": "Введите три списка чисел из трех строк и выведите в порядке возрастания только числа, имеющиеся в двух из трех списков\nНапример, при вводе:\n[1,2,3,4,5]\n[1,2,3,4,5]\n[6,7,8,9,10]\nна выходе ожидается:\n1 2 3 4 5. Если таких чисел нет, нужно вывести \"NO\" (без кавычек)",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "[1,2,3,4,5]\n[1,2,3,4,5]\n[6,7,8,9,10]",
                    "out": "1 2 3 4 5",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[1,3,5,6]\n[2,4,7,9]\n[1,10,15,6]",
                    "out": "1 6",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "[1,2,3,4]\n[5,6,7,8]\n[9,10,11,12]",
                    "out": "NO",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "[1,2,3,4]\n[5,6,7,8]\n[5,6,7,8]",
                    "out": "5 6 7 8",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 140,
        "type": "equal",
        "task": "Введите количество вводимых строк (> 0) и затем сами строки, состоящие из Фамилий школьников и их оценок по разным предметам в виде \"Петров 5\" (без кавычек), фамилии могут повторяться. Определите школьника с наибольшей средней оценкой. Например при вводе:\n4\nПетров 5\nПетров 4\nСоколова 3\nСоколова 4\nОжидается вывод:\nПетров",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "4\nПетров 5\nПетров 4\nСоколова 3\nСоколова 4",
                    "out": "Петров",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "2\nПетров 4\nСоколова 5",
                    "out": "Соколова",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 141,
        "type": "equal",
        "task": "Введите количество вводимых строк (> 0) и затем сами строки, состоящие из Фамилий школьников и их оценок по разным предметам в виде \"Петров 5\" (без кавычек), фамилии могут повторяться. Определите школьника с наименьшей средней оценкой. Например при вводе:\n4\nПетров 5\nПетров 4\nСоколова 3\nСоколова 4\nОжидается вывод:\nСоколова",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "4\nПетров 5\nПетров 4\nСоколова 3\nСоколова 4",
                    "out": "Соколова",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "2\nПетров 4\nСоколова 5",
                    "out": "Петров",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 142,
        "type": "equal",
        "task": "Введите количество вводимых строк (> 0) и затем сами строки, состоящие из Фамилий школьников и их оценок по разным предметам в виде \"Петров 5 4 3 2 5\" (без кавычек), фамилии могут повторяться. Выведите для каждого школьника его самую частую оценку (если таких оценок несколько, то вывести только максимальную). Cохраняйте все оценки школьников (расчет и вывод делаются после ввода всех строк). Например при вводе:\n2\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4\nОжидается вывод:\nПетров 5\nСоколова 3",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "2\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4",
                    "out": "Петров 5\nСоколова 3",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "2\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4 4",
                    "out": "Петров 5\nСоколова 4",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 143,
        "type": "equal",
        "task": "Введите количество вводимых строк (> 0) и затем сами строки, состоящие из Фамилий школьников и их оценок по разным предметам в виде \"Петров 5\" (без кавычек), фамилии могут повторяться. Выведите для каждого школьника через пробел количество пятерок, четверок, троек и двоек. Без использования словаря (используйте списки).\nНапример, при вводе:\n10\nПетров 5\nПетров 4\nПетров 3\nПетров 2\nПетров 5\nСоколова 3\nСоколова 4\nСоколова 3\nСоколова 3\nСоколова 4\nна выходе ожидается: \nПетров 2 1 1 1\nСоколова 0 2 3 0",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "10\nПетров 5\nПетров 4\nПетров 3\nПетров 2\nПетров 5\nСоколова 3\nСоколова 4\nСоколова 3\nСоколова 3\nСоколова 4",
                    "out": "Петров 2 1 1 1\nСоколова 0 2 3 0",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "8\nПетров 5\nПетров 5\nПетров 5\nПетров 5\nСоколова 3\nСоколова 3\nСоколова 3\nСоколова 3",
                    "out": "Петров 4 0 0 0\nСоколова 0 0 4 0",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "7\nПетров 2\nПетров 3\nСоколова 4\nПетров 3\nСоколова 4\nПетров 5\nСоколова 5",
                    "out": "Петров 1 0 2 1\nСоколова 1 2 0 0",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 144,
        "type": "equal",
        "task": "Введите количество вводимых строк (> 0) и затем сами строки, состоящие из Фамилий школьников и их оценок по разным предметам в виде \"Петров 5\" (без кавычек), фамилии могут повторяться. Выведите для каждого школьника через пробел количество двоек, троек, четверок и пятерок. \nНапример, при вводе:\n10\nПетров 5\nПетров 4\nПетров 3\nПетров 2\nПетров 5\nСоколова 3\nСоколова 4\nСоколова 3\nСоколова 3\nСоколова 4\nна выходе ожидается: \nПетров 1 1 1 2\nСоколова 0 3 2 0",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "10\nПетров 5\nПетров 4\nПетров 3\nПетров 2\nПетров 5\nСоколова 3\nСоколова 4\nСоколова 3\nСоколова 3\nСоколова 4",
                    "out": "Петров 1 1 1 2\nСоколова 0 3 2 0",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "8\nПетров 5\nПетров 5\nПетров 5\nПетров 5\nСоколова 3\nСоколова 3\nСоколова 3\nСоколова 3",
                    "out": "Петров 0 0 0 4\nСоколова 0 4 0 0",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "7\nПетров 2\nПетров 3\nСоколова 4\nПетров 3\nСоколова 4\nПетров 5\nСоколова 5",
                    "out": "Петров 1 2 0 1\nСоколова 0 0 2 1",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 145,
        "type": "equal",
        "task": "Введите количество вводимых строк (> 0) и затем сами строки, состоящие из Фамилий школьников и их оценок по разным предметам в виде \"Петров 5 4 3 2 5\" (без кавычек), фамилии могут повторяться. Выведите средние оценки школьников с точностью один знак после запятой. Сохраняйте все оценки школьников (расчет и вывод делаются после ввода всех строк). Например при вводе:\n2\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4\nожидается вывод:\n3.8\n3.4",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "2\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4",
                    "out": "3.8\n3.4",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "2\nПетров 5 5 5 5 5\nСоколова 3 3 3 3 3",
                    "out": "5.0\n3.0",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 146,
        "type": "equal",
        "task": "Введите количество вводимых строк (> 0) и затем сами строки, состоящие из Фамилий школьников и их оценок по разным предметам в виде \"Петров 5 4 3 2 5\" (без кавычек), фамилии могут повторяться. Выведите школьников с наибольшим количеством пятерок. Сохраняйте все оценки школьников (расчет и вывод делаются после ввода всех строк). Например при вводе:\n4\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4\nВереитинов 5 5 5 5\nНагорная 5 5 5 5 \nожидается вывод:\nВереитинов\nНагорная",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "4\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4\nВереитинов 5 5 5 5\nНагорная 5 5 5 5",
                    "out": "Вереитинов\nНагорная",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "4\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4\nВереитинов 2 2 2 5\nНагорная 5 5 5 5",
                    "out": "Нагорная",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 147,
        "type": "equal",
        "task": "Введите количество вводимых строк (> 0) и затем сами строки, состоящие из Фамилий школьников и их оценок по разным предметам в виде \"Петров 5 4 3 2 5\" (без кавычек), фамилии могут повторяться. Выведите школьников с наименьшим количеством двоек и троек. Сохраняйте все оценки школьников (расчет и вывод делаются после ввода всех строк)\nНапример, при вводе:\n6\nПетровский 5 3 3 2 4\nПетров 5 4 3 2 5\nДудкин 5 5 5 5 5\nСоловьева 5 5 5 5\nКоролева 5 4 2 3 5\nДубинин 5 4 5 4 5\nна выходе ожидается:\nДудкин Соловьева Дубинин",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "6\nПетровский 5 3 3 2 4\nПетров 5 4 3 2 5\nДудкин 5 5 5 5 5\nСоловьева 5 5 5 5\nКоролева 5 4 2 3 5\nДубинин 5 4 5 4 5",
                    "out": "Дудкин Соловьева Дубинин",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "6\nПетровский 5 5 5 5 5\nПетров 5 5 5 5 5\nДудкин 5 5 5 5 5\nСоловьева 4 4 4 4 4\nКоролева 5 4 5 4 5\nДубинин 3 3 3 4 2",
                    "out": "Петровский Петров Дудкин Соловьева Королева",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "6\nПетровский 5 5 5 5 5\nПетров 5 5 5 5 5\nДудкин 5 5 5 5 5\nСоловьева 4 4 4 4 4\nКоролева 5 4 5 4 5\nДубинин 5 5 5 5 5",
                    "out": "Петровский Петров Дудкин Соловьева Королева Дубинин",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 148,
        "type": "equal",
        "task": "Введите количество вводимых строк (> 0) и затем сами строки, состоящие из Фамилий школьников и их оценок по разным предметам в виде \"Петров 5 4 3 2 5\" (без кавычек), фамилии могут повторяться. Выведите школьников в порядке убывания средних оценок. Сохраняйте все оценки школьников (расчет и вывод делаются после ввода всех строк). Например при вводе:\n2\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4\nожидается вывод:\nПетров\nСоколова",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "2\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4",
                    "out": "Петров\nСоколова",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "2\nСоколова 5 5 5 5 5\nПетров 3 3 3 3 3",
                    "out": "Соколова\nПетров",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 149,
        "type": "equal",
        "task": "Введите количество вводимых строк (> 0) и затем сами строки, состоящие из Фамилий школьников и их оценок по разным предметам в виде \"Петров 5 4 3 2 5\" (без кавычек), фамилии могут повторяться. Выведите школьников в порядке убывания средних оценок с учетом отсутствия двоек (то есть школьники с двойками сортируются отдельно). Используйте словари. Сохраняйте все оценки школьников (расчет и вывод делаются после ввода всех строк). Например при вводе:\n4\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4\nВереитинов 5 5 5 4\nНагорная 5 5 5 5 \nОжидается вывод:\nНагорная\nВереитинов\nСоколова\nПетров",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "4\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4\nВереитинов 5 5 5 4\nНагорная 5 5 5 5 ",
                    "out": "Нагорная\nВереитинов\nСоколова\nПетров",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "4\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4\nВереитинов 5 5 5 4\nНагорная 5 5 2 5 ",
                    "out": "Вереитинов\nСоколова\nНагорная\nПетров",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 150,
        "type": "equal",
        "task": "Введите количество вводимых строк (> 0) и затем сами строки, состоящие из Фамилий школьников и их оценок по разным предметам в виде \"Петров 5 4 3 2 5\" (без кавычек), фамилии могут повторяться. Для каждой оценки выведите фамилию школьника, у которого эта оценка встречается чаще, чем у других. Если таких школьников для одной оценки больше одного, то вывести всех, отсортировав по алфавиту. Cохраняйте все оценки школьников (расчет и вывод делаются после ввода всех строк). Например при вводе:\n2\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4\nожидается вывод:\n5 Петров\n4 Соколова\n3 Соколова\n2 Петров",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "2\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4",
                    "out": "5 Петров\n4 Соколова\n3 Соколова\n2 Петров",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "2\nСоколова 5 5 5 5 5\nПетров 3 3 3 3 3",
                    "out": "5 Соколова\n3 Петров",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "3\nПетров 5 4 3 2 5\nСоколова 3 4 3 3 4\nРустамов 3 4 3 3 4",
                    "out": "5 Петров\n4 Соколова, Рустамов\n3 Соколова, Рустамов\n2 Петров",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 151,
        "type": "equal",
        "task": "Напишите функцию, реализующую функциональность строкового метода str.lstrip(): удаление пробельных символов в начале строки\nНапример, при вводе:\n    hello world!\nна выходе ожидается: \nhello world!",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "    hello world!",
                    "out": "hello world!",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "    удаление пробельных символов",
                    "out": "удаление пробельных символов",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "нет пробелов",
                    "out": "нет пробелов",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 152,
        "type": "equal",
        "task": "Напишите функцию, реализующую функциональность строкового метода str.rstrip(): удаление пробельных символов из конца строки. Например при вводе:\n'удаление пробельных символов  ' (без кавычек)\nожидается вывод:\n'удаление пробельных символов' (без кавычек)",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "    hello world!   ",
                    "out": "    hello world!",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "удаление пробельных символов      ",
                    "out": "удаление пробельных символов",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "нет пробелов",
                    "out": "нет пробелов",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 153,
        "type": "equal",
        "task": "Напишите функцию, реализующую функциональность строкового метода str.strip(): удаление пробельных символов из начала и конца строки. Например при вводе:\n'  \tудаление пробельных символов' (без кавычек)\nожидается вывод:\n'удаление пробельных символов' (без кавычек)",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": " \t   hello world! ",
                    "out": "hello world!",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "  \tудаление пробельных символов  ",
                    "out": "удаление пробельных символов",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": " нет пробелов\t",
                    "out": "нет пробелов",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 154,
        "type": "equal",
        "task": "Напишите функцию, подсчитывающую число знаков препинания и число пробелов в строке и возвращающую два числа в виде кортежа\nНапример, при вводе:\nКак же хорошо летом на море.\nна выходе ожидается:\n(1, 5)",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "Как же хорошо летом на море.",
                    "out": "(1, 5)",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "Как же хорошо летом на море",
                    "out": "(0, 5)",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "Как же хорошо летом на море, а зимой еще лучше!",
                    "out": "(2, 9)",
                    "score": 10
                }
            },
            "4": {
                "1": {
                    "in": "нет!",
                    "out": "(1, 0)",
                    "score": 10
                }
            },
            "5": {
                "1": {
                    "in": "нет",
                    "out": "(0, 0)",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 155,
        "type": "equal",
        "task": "Напишите функцию, подсчитывающую число букв во введенной строки в верхнем регистре, нижнем регистре и число не-букв, и возвращающую результат в виде словаря, например, для строки: \"ПОпрцфаолиыфиацофр-аиОРЦ\" \nвывод : {'uppercase': 5, 'lowercase': 18, 'non-alpha': 1}",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "ПОпрцфаолиыфиацофр-аиОРЦ",
                    "out": "{'uppercase': 5, 'lowercase': 18, 'non-alpha': 1}",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "пфцпацфафцацфвцрй",
                    "out": "{'uppercase': 0, 'lowercase': 17, 'non-alpha': 0}",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "----------------",
                    "out": "{'uppercase': 0, 'lowercase': 0, 'non-alpha': 16}",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 156,
        "type": "equal",
        "task": "Напишите функцию fib, которая принимает число n > 0 и возвращает n-ый элемент последовательности Фибоначчи (1, 1, 2, 3, 5, 8, 13, ...). Например, при вводе числа 6 ожидается вывод числа 8",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "1",
                    "out": "1",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "3",
                    "out": "2",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "8",
                    "out": "21",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 157,
        "type": "equal",
        "task": "Напишите функцию fact, которая принимает число n >= 0 и возвращает n! - факториал числа n (произведение чисел 1, 2, ...n). Факториал нуля равен 1.\nНапример, на входе ожидается:\n3\nНа выходе ожидается:\n6",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "0",
                    "out": "1",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "3",
                    "out": "6",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "12",
                    "out": "479001600",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 158,
        "type": "equal",
        "task": "Напишите функцию is_power, которая принимает два положительных числа a и b в строке через запятую и возвращает True, если a является полной степенью b (например, a == 81, b == 9), и False в противном случае. \nНапример при вводе:\n100, 10\nОжидается вывод:\nTrue",
        "rating": 2,
        "variants": {
            "1": {
                "1": {
                    "in": "100, 10",
                    "out": "True",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "100, 15",
                    "out": "False",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 159,
        "type": "equal",
        "task": "Напишите функцию nearest_power, которая принимает два положительных числа a и b в списке и возвращает ближайшее к a число, которое является полной степенью b (например, a == 78, b == 9, результат == 81).\nНапример при вводе:\n[100, 11]\nожидается вывод:\n121",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "[78, 9]",
                    "out": "81",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "[100, 11]",
                    "out": "121",
                    "score": 10
                }
            },
            "3": {
                "1": {
                    "in": "[17, 4]",
                    "out": "16",
                    "score": 10
                }
            }
        }
    },
    {
        "problem": 160,
        "type": "equal",
        "task": "Напишите функцию sort_dict, которая принимает словарь и возвращает его копию, в которой ключи словаря отсортированы. Например при вводе:\n{a: 1, c: 5, b: 6}\nОжидается вывод:\n{a: 1, b: 6, c: 5}",
        "rating": 3,
        "variants": {
            "1": {
                "1": {
                    "in": "{a: 1, c: 5, b: 6}",
                    "out": "{a: 1, b: 6, c: 5}",
                    "score": 10
                }
            },
            "2": {
                "1": {
                    "in": "{a: 55, sd: 222, b: 4}",
                    "out": "{a: 55, b: 4, sd: 222}",
                    "score": 10
                }
            }
        }
    }
]